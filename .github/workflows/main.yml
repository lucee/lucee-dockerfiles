# This is a basic workflow to help you get started with Actions

name: Build Lucee Docker Images

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      LUCEE_VERSION:
        required: true
        type: string
      REBUILD_DATE:
        required: false
        type: string
      # DRY_RUN is a boolean for the dispatch UI, seems to work fine
      DRY_RUN:
        required: false
        default: false
        type: boolean
  # Triggers the workflow on push or pull request events but only for the master branch
  workflow_call:
    inputs:
      LUCEE_VERSION:
        required: true
        type: string
      REBUILD_DATE:
        required: false
        type: string
      # DRY_RUN is a string for the workflow call so that the default is set properly
      DRY_RUN:
        required: false
        default: "false"
        type: string
  repository_dispatch:
     types: [build-docker-images]

env:
  LUCEE_VERSION: ${{ github.event.inputs.LUCEE_VERSION }}
  REBUILD_DATE: ${{ github.event.inputs.REBUILD_DATE }}
  DRY_RUN: ${{ github.event.inputs.DRY_RUN }}


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-docker-images:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
            platforms: amd64,arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          config: .github/buildkitd.toml

      - name: Setup Python v3
        uses: actions/setup-python@v3.1.2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            
      - name: Copy repository_dispatch event clientpayload to ENV
        if: ${{ github.event_name == 'repository_dispatch' }}
        run: |
          echo "LUCEE_VERSION=${{ github.event.client_payload.LUCEE_VERSION }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.client_payload.BRANCH }}" >> $GITHUB_ENV

      # Runs a single command using the runners shell
      - name: Setup env
        run: |
          echo LUCEE_VERSION: $LUCEE_VERSION
          echo BRANCH: $BRANCH
          echo PULL_REQUEST: $PULL_REQUEST
          pip3 install -r requirements.txt
          python3 ./generate-matrix.py >/dev/null && git diff --exit-code

      # Runs a set of commands using the runners shell
      - name: Build Lucee docker image [JRE21, Tomcat 9.0]
        run: python3 -u build-images.py
        env:
          TOMCAT_VERSION: "9.0"
          TOMCAT_JAVA_VERSION: jre21-temurin-jammy
          TOMCAT_BASE_IMAGE: ""
          LUCEE_MINOR: "6.0,6.1"
          LUCEE_SERVER: ",-nginx"
          LUCEE_VARIANTS: ",-light"

      - name: Build Lucee docker image [JRE11, Tomcat 9.0]
        run: python3 -u build-images.py
        env:
          TOMCAT_VERSION: "9.0"
          TOMCAT_JAVA_VERSION: jre11-temurin-jammy
          TOMCAT_BASE_IMAGE: ""
          LUCEE_MINOR: "5.3,5.4,6.0,6.1"
          LUCEE_SERVER: ",-nginx"
          LUCEE_VARIANTS: ",-light"

      - name: Build Lucee docker image [JRE8, Tomcat 9.0]
        run: python3 -u build-images.py
        env:
          TOMCAT_VERSION: "9.0"
          TOMCAT_JAVA_VERSION: jre8-temurin-jammy
          TOMCAT_BASE_IMAGE: ""
          LUCEE_MINOR: "5.3,5.4"
          LUCEE_SERVER: ",-nginx"
          LUCEE_VARIANTS: ",-light"

      - name: Build Lucee docker image [JDK21, Tomcat 9.0]
        run: python3 -u build-images.py
        env:
          TOMCAT_VERSION: "9.0"
          TOMCAT_JAVA_VERSION: jdk21-temurin-jammy
          TOMCAT_BASE_IMAGE: ""
          LUCEE_MINOR: "6.0,6.1"
          LUCEE_SERVER: ",-nginx"
          LUCEE_VARIANTS: ",-light"

      - name: Build Lucee docker image [JDK11, Tomcat 9.0]
        run: python3 -u build-images.py
        env:
          TOMCAT_VERSION: "9.0"
          TOMCAT_JAVA_VERSION: jdk11-temurin-jammy
          TOMCAT_BASE_IMAGE: ""
          LUCEE_MINOR: "5.3,5.4,6.0,6.1"
          LUCEE_SERVER: ",-nginx"
          LUCEE_VARIANTS: ",-light"

      - name: Build Lucee docker image [JDK8, Tomcat 9.0]
        run: python3 -u build-images.py
        env:
          TOMCAT_VERSION: "9.0"
          TOMCAT_JAVA_VERSION: jdk8-temurin-jammy
          TOMCAT_BASE_IMAGE: ""
          LUCEE_MINOR: "5.3,5.4"
          LUCEE_SERVER: ",-nginx"
          LUCEE_VARIANTS: ",-light"
          SKIP_SNAPSHOTS: true

      - name: Build Lucee docker image [JDK11, Tomcat 9.0, older Ubuntu 20.04 LTS]
        run: python3 -u build-images.py
        env:
          TOMCAT_VERSION: "9.0"
          TOMCAT_JAVA_VERSION: jdk11-temurin-focal
          TOMCAT_BASE_IMAGE: ""
          LUCEE_MINOR: "5.3,5.4,6.0,6.1"
          LUCEE_SERVER: ",-nginx"
          LUCEE_VARIANTS: ",-light"
          SKIP_SNAPSHOTS: true

      - name: Build Lucee docker image [JDK8, Tomcat 9.0, older Ubuntu 20.04 LTS]
        run: python3 -u build-images.py
        env:
          TOMCAT_VERSION: "9.0"
          TOMCAT_JAVA_VERSION: jdk8-temurin-focal
          TOMCAT_BASE_IMAGE: ""
          LUCEE_MINOR: "5.3,5.4"
          LUCEE_SERVER: ",-nginx"
          LUCEE_VARIANTS: ",-light"
          SKIP_SNAPSHOTS: true
